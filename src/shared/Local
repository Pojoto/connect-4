
local turn_remote = game:GetService('ReplicatedStorage'):WaitForChild("Turn")
local turn_function = game:GetService("ReplicatedStorage").TurnFunction

local runservice = game:GetService("RunService")


local player = game:GetService("Players").LocalPlayer

local mouse = player:GetMouse()

local center = game.Workspace:WaitForChild("Board").Center

local SPACING = 8

local HEIGHT = 25

local tween_service = game:GetService("TweenService")



columns_x = {
	
	-3 * SPACING,
	-2 * SPACING,
	-SPACING,
	0,
	SPACING,
	2 * SPACING,
	3 * SPACING
	
}


local token

--this function tracks mouse movement and adjusts token position based on it
local function mouse_stuff()
	
	local direction = mouse.UnitRay.Direction
	local origin = mouse.UnitRay.Origin
	
	local cf = CFrame.new(origin, origin + direction)
	cf = center.CFrame:ToObjectSpace(cf)
	
	
	local t = cf.Z / cf.LookVector.Z
	
	local x_intersection = cf.X + t * cf.LookVector.X
	
	for i = 1, #columns_x do
		--check if the x intersection position of the player ray is in the area of one of the columns
		if  x_intersection >= columns_x[i] - (SPACING / 2) and x_intersection <= columns_x[i] + (SPACING / 2) then
			
			local goal = {}
			goal.Position = Vector3.new(center.Position.X - columns_x[i], token.Position.Y, token.Position.Z)
			
			local tween_info = TweenInfo.new(0.2, Enum.EasingStyle.Quart)
			
			local tween = tween_service:Create(token, tween_info, goal)
			
			tween:Play()
			
			--token.Position = Vector3.new(center.Position.X - columns_x[i], token.Position.Y, token.Position.Z)
			break
		end
	end
	
end

local connection

--this function is called when a mouse click happens > disconnect all connections and drop the token
local function click()

	token.Anchored = false

	runservice:UnbindFromRenderStep("mouse_bind")
	
	if connection then
		connection:Disconnect()
	end
	
	turn_remote:FireServer()
	
end


local function player_turn()
	
	--create token
	token = game:GetService("ReplicatedStorage").Token:Clone()
	token.Anchored = true
	token.Position = Vector3.new(center.Position.X + columns_x[4], center.Position.Y + HEIGHT, center.Position.Z)
	token.Parent = game.Workspace
	
	--establish function connections (click event and mouse tracking)
	connection = mouse.Button1Down:Connect(click)
	runservice:BindToRenderStep("mouse_bind", 1, mouse_stuff)
	
	for i = 0, 10 do
		wait(1)
	end
	
	token.Anchored = false
	
	turn_remote:FireServer()
	
end



turn_remote.OnClientEvent:Connect(function()
	
	player_turn()
	
	
	
end)

--turn_function.OnClientInvoke = player_turn

