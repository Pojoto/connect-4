
local turn_remote = game:GetService('ReplicatedStorage'):WaitForChild("Turn")
local turn_function = game:GetService("ReplicatedStorage").TurnFunction

local runservice = game:GetService("RunService")


local player = game:GetService("Players").LocalPlayer

local mouse = player:GetMouse()

local SPACING = 8

local HEIGHT = 25

local tween_service = game:GetService("TweenService")

columns_x = {
	
	-3 * SPACING,
	-2 * SPACING,
	-SPACING,
	0,
	SPACING,
	2 * SPACING,
	3 * SPACING
	
}




local token
local connection
local drop_column = 4
local clicked = false
local id
local center
local board


local function find_mouse_column()
	local direction = mouse.UnitRay.Direction
	local origin = mouse.UnitRay.Origin

	local cf = CFrame.new(origin, origin + direction)
	cf = center.CFrame:ToObjectSpace(cf)


	local t = cf.Z / cf.LookVector.Z

	local x_intersection = cf.X + t * cf.LookVector.X
	
	for i = 1, #columns_x do
		--check if the x intersection position of the player ray is in the area of one of the columns
		if  x_intersection >= columns_x[i] - (SPACING / 2) and x_intersection <= columns_x[i] + (SPACING / 2) then

			drop_column = i

		end
	end

end


--this function tracks mouse movement and adjusts token position based on it
local function hover_token()
	
	find_mouse_column()
	
	local goal = {}
	goal.Position = Vector3.new(center.Position.X - columns_x[drop_column], token.Position.Y, token.Position.Z)
	local tween_info = TweenInfo.new(0.3, Enum.EasingStyle.Cubic)
	local tween = tween_service:Create(token, tween_info, goal)

	tween:Play()
	
end


local function finish()
	
	--token.CanCollide = true
	--token.Anchored = false
	token:Destroy()
	runservice:UnbindFromRenderStep("mouse_bind")

	if connection then
		connection:Disconnect()
	end
	
	turn_remote:FireServer(id, drop_column)
	
end

--this function is called when a mouse click happens > disconnect all connections and drop the token
local function click()
	
	print(board)
	print(#board[drop_column])
	
	--checks if the move is legal
	if #board[drop_column] < 6 then
		clicked = true
		finish()
	else
		local tween_info = TweenInfo.new(0.2, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out, 0, true)
		local goal = {}
		goal.CFrame = token.CFrame*CFrame.new(0,1,0)
		local tween = tween_service:Create(token, tween_info, goal)
		tween:Play()
	end
	
end


local function player_turn()
	
	--establish function connections (click event and mouse tracking)
	connection = mouse.Button1Down:Connect(click)
	runservice:BindToRenderStep("mouse_bind", 1, hover_token)
	
	for i = 100, 0, -1 do
		if clicked then
			clicked = false
			return
		end
		wait(0.1)
	end
	
	finish()
	
end


--server has told us it is our turn
turn_remote.OnClientEvent:Connect(function(incoming_id, color, incoming_center, incoming_board)
	
	id = incoming_id
	center = incoming_center
	board = incoming_board
	
	find_mouse_column()
	
	--create token
	token = game:GetService("ReplicatedStorage").Token:Clone()
	token.Anchored = true
	token.CanCollide = false
	token.Position = Vector3.new(center.Position.X - columns_x[drop_column], center.Position.Y + HEIGHT, center.Position.Z)
	token.Color = color
	token.Parent = game.Workspace
	
	player_turn()
	
end)


